<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Style for Textblock hover -->
    <Style x:Key="TextBlockButton" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style for information textblock -->
    <Style x:Key="TextBlockInformation" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!-- Style for information header textblock -->
    <Style x:Key="TextBlockInformationHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Padding" Value="0,3"/>
    </Style>

    <!-- Style for GridViewColumnHeader -->
    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{StaticResource DarkTransparentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Padding="4,4,4,2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkTransparentBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkTransparentBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkTransparentBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for ListViewItem -->
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource LightTransparentBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource LightAccentBrush}" />
        <Setter Property="FontFamily" Value="Montserrat" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}">
                        <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0,2" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Global ScrollBar Style -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Rectangle Fill="{StaticResource DarkTransparentBackgroundBrush}"/>

                        <Track Name="PART_Track" Orientation="{TemplateBinding Orientation}">
                            <Track.Style>
                                <Style TargetType="Track">
                                    <Style.Triggers>
                                        <!-- DataTrigger to set IsDirectionReversed based on Orientation -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Orientation}" Value="Vertical">
                                            <Setter Property="IsDirectionReversed" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Orientation}" Value="Horizontal">
                                            <Setter Property="IsDirectionReversed" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Track.Style>
                            
                            <Track.Thumb>
                                <Thumb Background="{StaticResource LightTransparentBackgroundBrush}" Height="auto" Width="auto">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Margin" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Border x:Name="ThumbBorder" Background="{TemplateBinding Background}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="ThumbBorder" Property="Background" Value="{StaticResource AccentBrush}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>